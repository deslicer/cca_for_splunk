# Version parameter is used to validate this file
# against cca_for_splunk framework requirements.
cca_infrastructure_searchhead_deployer_shcluster_c1_file_version: '2023.2.2'

splunk_conf_group_settings:

 - name: Splunk server.conf
   filename: server.conf
   filepath: '{{ splunk_path }}/etc/system/local'
   sections:
    - section: 'license'
      options:
       - option: 'master_uri'
         value: "{{ cca_splunk_license_manager_uri }}"
         state: "{{ 'present'
                    if
                      current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.0.0', '<=')
                    and
                      not is_license_manager | default(false)
                    else
                      'absent' }}"
         comment: >-
           Deprecated value from Splunk version 9.0+
       - option: 'manager_uri'
         value: "{{ cca_splunk_license_manager_uri }}"
         state: "{{ 'present'
                    if
                      current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.0.0', '>=')
                    and
                      not is_license_manager | default(false)
                    else
                      'absent' }}"
         comment: >-
           Configure license manager uri with a DNS alias, to ease future license manager migration

    - section: 'shclustering'
      options:
       - option: 'pass4SymmKey'
         value: "{{ cca_splunk_shcluster_c1_pass4SymmKey_hash }}"
       - option: 'shcluster_label'
         value: "{{ shcluster_label }}"
       - option: 'deployerPushThreads'
         value: 'auto'
         comment: >-
           Limit the risk of bundle push timeouts and shorten time to push apply bundles

    - section: 'httpServer'
      options:
       - option: 'max_content_length'
         value: '4294968000'
         comment: >-
          Increasing amount of used memory for http requests

    - section: 'applicationsManagement'
      options:
       - option: 'allowInternetAccess'
         value: 'false'
         comment: >-
          Disable Internet Access from Search Head Cluster Deployer

 - name: Splunk inputs.conf
   filename: inputs.conf
   filepath: '{{ splunk_path }}/etc/system/local'
   sections:
    - section: ''
      options:
       - option: ''
         value: ''

 - name: Splunk outputs.conf
   filename: outputs.conf
   filepath: '{{ splunk_path }}/etc/system/local'
   sections:
    - section: ''
      options:
       - option: ''
         value: ''

 - name: Splunk limits.conf
   filename: limits.conf
   filepath: '{{ splunk_path }}/etc/system/local'
   sections:
    - section: ''
      options:
       - option: ''
         value: ''

 - name: Splunk web.conf
   filename: web.conf
   filepath: '{{ splunk_path }}/etc/system/local'
   sections:
    - section: ''
      options:
       - option: ''
         value: ''

 - name: Splunk ui-prefs.conf
   filename: ui-prefs.conf
   filepath: '{{ splunk_path }}/etc/system/local'
   sections:
    - section: ''
      options:
       - option: ''
         value: ''

###############################################################################
#
# Base configuration for Search Head cluster members, are being
# managed using a dedicated app. The app is configured directly on the
# Deployer in the shcluster/apps directory
#
###############################################################################
 - name: Splunk server.conf for cluster members
   filename: server.conf
   filepath: '{{ splunk_path }}/etc/shcluster/apps/{{ app_name_shc_member_conf }}/default'
   sections:
    - section: 'license'
      options:
       - option: 'master_uri'
         value: "{{ cca_splunk_license_manager_uri }}"
         state: "{{ 'present'
                    if
                      current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.0.0', '<=')
                    and
                      not is_license_manager | default(false)
                    else
                      'absent' }}"
         comment: >-
           Deprecated value from Splunk version 9.0+
       - option: 'manager_uri'
         value: "{{ cca_splunk_license_manager_uri }}"
         state: "{{ 'present'
                    if
                      current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.0.0', '>=')
                    and
                      not is_license_manager | default(false)
                    else
                      'absent' }}"
         comment: >-
           Configure license manager uri with a DNS alias, to ease future license manager migration

    - section: 'applicationsManagement'
      options:
       - option: 'allowInternetAccess'
         value: 'false'
         comment: >-
          Disallow internet access from servers to stop error messages from servers without internet access

    - section: 'shclustering'
      options:
       - option: 'shcluster_label'
         value: "{{ shcluster_label }}"


 - name: Splunk limits.conf for cluster members
   filename: limits.conf
   filepath: '{{ splunk_path }}/etc/shcluster/apps/{{ app_name_shc_member_conf }}/default'
   sections:
    - section: 'realtime'
      options:
       - option: 'indexed_realtime_use_by_default'
         value: 'true'

    - section: 'storage_passwords_masking'
      options:
       - option: 'view_cleartext_spl_rest'
         value: 'false'
         state: "{{ 'present'
                   if
                       current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.3.2', '>=')
                     or
                       current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.2.4', '>=')
                       and
                       current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.3.0', '<=')
                     or
                       current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.1.7', '>=')
                       and
                       current_splunk_enterprise_version | default(splunk_enterprise_version) is version('9.2.0', '<=')
                   else
                     'absent' }}"
         comment: >-
           Fix for Sensitive Information Disclosure through SPL commands
           Advisory ID: SVD-2024-1204 CVE ID: CVE-2024-53246

    - section: ''
      options:
       - option: ''
         value: ''


 - name: Splunk props.conf
   filename: props.conf
   filepath: '{{ splunk_path }}/etc/shcluster/apps/{{ app_name_shc_member_conf }}/default'
   sections:
    - section: ''
      options:
       - option: ''
         value: ''

 - name: Splunk savedsearches.conf
   filename: savedsearches.conf
   filepath: '{{ splunk_path }}/etc/shcluster/apps/{{ app_name_shc_member_conf }}/default'
   sections:
    - section: 'default'
      options:
       - option: 'defer_scheduled_searchable_idxc'
         value: 'false'
         comment: >-
           By default, during rolling upgrade, continuous scheduled searches are deferred
           until after the upgrade is complete, based on the default defer_scheduled_searchable_idxc
           attribute in savedsearches.conf. Real-time scheduled searches are deferred regardless
           of this setting.

 - name: Splunk web.conf
   filename: web.conf
   filepath: '{{ splunk_path }}/etc/shcluster/apps/{{ app_name_shc_member_conf }}/default'
   sections:
    - section: 'settings'
      options:
        - option: 'replyHeader.Referrer-Policy'
          value: "strict-origin-when-cross-origin"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Controls how much referrer information is included with requests.
            "strict-origin-when-cross-origin" helps limit leakage of sensitive URL data.
        - option: 'replyHeader.Access-Control-Allow-Origin'
          value: "https://{{ fqdn | default(inventory_hostname) }}"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Specifies which origin is allowed for cross-origin resource sharing (CORS).
            Update fqdn in your inventory with your specific allowed domain to limit resource access securely.
        - option: 'replyHeader.Cross-Origin-Opener-Policy'
          value: "same-origin"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Prevents your site from opening cross-origin popups without explicit intent.
            "same-origin" enhances protection against cross-origin attacks.
        - option: 'replyHeader.Cross-Origin-Embedder-Policy'
          value: "require-corp"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Restricts embedding cross-origin resources without explicit approval.
            Ensure embedded resources explicitly allow embedding via CORP header to avoid loading issues.
        - option: 'replyHeader.Cross-Origin-Resource-Policy'
          value: "same-site"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Limits resources to be loaded only from the same site.
            Carefully verify your external resources as this can block legitimate cross-site resource loading.
        - option: 'replyHeader.X-Permitted-Cross-Domain-Policies'
          value: "none"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Prevents Adobe Flash and Acrobat from loading cross-domain policy files.
            "none" strongly restricts cross-domain interactions and improves security.
        - option: 'replyHeader.Content-Security-Policy'
          value: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'; frame-src 'self'; object-src 'none';"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Defines a strict Content Security Policy (CSP) restricting resource types and origins.
            Adjust this policy carefully as overly restrictive settings can break website functionalities.
        - option: 'sendStrictTransportSecurityHeader'
          value: "true"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Enables HTTP Strict Transport Security (HSTS), enforcing browser communication over HTTPS only.
            Ensure valid and trusted SSL certificates are configured properly before enabling.
        - option: 'includeSubDomains'
          value: "true"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Extends HSTS policy to include all subdomains.
            Ensure all subdomains can support HTTPS before activating to avoid downtime or certificate errors.
        - option: 'preload'
          value: "true"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Indicates intent to have domain preloaded into browser HSTS lists.
            Be cautious: removing domains from preload lists later can be difficult and time-consuming.
        - option: 'x_frame_options_sameorigin'
          value: "false"
          state: "{{ 'present' if enable_web_security_headers_shcluster_members | default(false) else 'absent' }}"
          comment: >-
            Controls whether your site may be embedded in iframes from same origin.
            Setting to "false" could allow embedding from different origins; review carefully based on your embedding needs.
